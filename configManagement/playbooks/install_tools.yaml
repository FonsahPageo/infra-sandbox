---
- name: Software Installation Playbook
  hosts: testing
  gather_facts: false
  become: true
  become_method: sudo

  tasks:
    - name: Check effective user
      command: whoami
      register: whoami_output

    - name: Show effective user
      debug:
        msg: "Effective user: {{ whoami_output.stdout }}"

    - name: Download Python 3.13.2
      get_url:
        url: https://www.python.org/ftp/python/3.13.2/Python-3.13.2.tgz
        dest: /tmp/Python-3.13.2.tgz
        mode: 0755

    - name: Extract Python source
      unarchive:
        src: /tmp/Python-3.13.2.tgz
        dest: /tmp/
        remote_src: yes

    - name: Compile and install Python
      command:
        cmd: |
          ./configure --enable-optimizations &&
          make -j $(nproc) &&
          make altinstall
        chdir: /tmp/Python-3.13.2

    - name: Install specific pip version
      pip:
        name: pip
        version: 25.0.1
        executable: /usr/local/bin/python3.13

    # - name: Download Docker installation script
    #   shell: "curl -fsSL https://get.docker.com -o /tmp/get-docker.sh"

    # - name: Run Docker installation script
    #   shell: |
    #     chmod +x /tmp/get-docker.sh
    #     /bin/bash /tmp/get-docker.sh
    #   args:
    #     executable: /bin/bash
    #   register: docker_install_result
    #   failed_when: docker_install_result.rc != 0

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    #
    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Install Docker
      apt:
        name:
          - docker.io
          - containerd
        state: present
        update_cache: no 

    - name: Display Docker installation output if failed
      debug:
        var: docker_install_result
      when: docker_install_result.rc != 0

    - name: Add current user to Docker group
      user:
        name: "{{ lookup('env', 'USER') }}"
        groups: docker
        append: yes

    - name: Update apt package index
      apt:
        update_cache: yes

    # - name: Download Kustomize
    #   shell: |
    #     curl -L --retry 3 --output /tmp/kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.3.0/kustomize_v5.3.0_linux_amd64.tar.gz
    #   args:
    #     creates: /tmp/kustomize.tar.gz

    # - name: Install Kustomize
    #   unarchive:
    #     src: /tmp/kustomize.tar.gz
    #     dest: /usr/local/bin
    #     remote_src: yes
    #     mode: '0755'

    # - name: Install Docker Compose
    #   shell: |
    #     curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    #     chmod +x /usr/local/bin/docker-compose

    # - name: Verify installations
    #   shell: "docker --version && kubectl version --client && kustomize version && docker-compose --version && java --version && python3 --version"
    #   register: verification_output

    # - name: Display verification output
      # debug:
      #   msg: "{{ verification_output.stdout_lines }}"